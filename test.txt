This is a testFile, used to train my skills with github

######################
User login
######################

git config --global user.name "username"
git config --golbal user.email user@email.com



######################
initialize branch
######################

git config --global init.default branch main
-> names the main branch with the name "main"



######################
initialize repository
######################

git init
-> initializes an empty github repository



######################
get status
######################

git status
-> get the status of the files


######################
add files 
######################

git add file.name

git add --all
-> adds all the files that are not ignored by .gitignore


######################
remove files 
######################

git rm --cached file.name
-> This works for files that are currently being "followed" by git

git rm "file.name"
-> removes files that have already been committed


######################
commit files 
######################

git commit -m "commit_name"

######################
branching
######################

git branch branch.name
-> add a branch with name branch.name

git branch
-> check all the branches, and it shows which one we are currently in

git switch (-c) branch.name
-> change to the branch with name branch.name
-> -c adds the new branch, and also switches you to that new branch

git merge -m "message" branch.name
-> merge the branch branch.name into the main branch

git branch -d branch.name
-> delete a branch branch.name



######################
Other useful commands
######################

git diff
-> check the difference between the old and new instance of changed files

git restore "file.name"
-> can restore a file that has been deleted before a commit has happened (not sure about after)

git mv "oldfile.name" "newfile.name"
-> changes the name of the file to a new name

git log
-> get a log of all commits and info associated

git log --oneline
-> get a shorter version of the log of all commits

git log -p
-> get a log with more information about all commits

git reset committag
-> reset to previous git commit. find committag by typing git log (--oneline)